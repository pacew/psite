#! /usr/bin/env python3

import sys
import os
import getpass

#print(os.path.dirname(__file__))
#sys.path.insert(0, os.path.dirname(__file__))

import psite

cmds = []

def usage():
    print("usage: psite cmd")
    for elt in cmds:
        args = ""
        if len(elt) >= 3:
            args = elt[2]
        print("  psite", elt[0], args)
    sys.exit(1)
    

def cmd_install():
    site_name = None
    conf_key = None
    if len(sys.argv) >= 3:
        site_name = sys.argv[2]
    if len(sys.argv) >= 4:
        conf_key = sys.argv[3]
    psite.install(site_name, conf_key)
cmds.append(["install", cmd_install, "[sitename [confkey]]"])

def cmd_getvar():
    if (len(sys.argv) != 3):
        print("usage: getvar NAME")
        sys.exit(1)
    print(psite.getvar(sys.argv[2]))
cmds.append(["getvar", cmd_getvar])

def cmd_setvar():
    if len(sys.argv) != 4:
        print("usage: setvar NAME VAL")
        sys.exit(1)
    psite.setvar(sys.argv[2], sys.argv[3])
cmds.append(["setvar", cmd_setvar])

def cmd_db_password():
    pw = getpass.getpass()
    cfg = psite.get_cfg()
    file = "{}/psite_db_passwd".format(cfg['aux_dir'])
    with open(file, "w") as outf:
        outf.write(pw)
        outf.write("\n")

    print("also need:")
    print(("mysql_config_editor set"
           " --login-path={}"
           " --host={}"
           " --user={}"
           "--password").format(cfg['siteid'], 
                                psite.get_option("db_host"),
                                psite.get_option("db_use")))


cmds.append(["db_password", cmd_db_password])

cmds.append(["mkschema", psite.mkschema])
cmds.append(["s3-setup", psite.s3_setup])
cmds.append(["s3-sync", psite.s3_sync])
cmds.append(["backup", psite.do_backup])
cmds.append(["restore", psite.restore])

def cmd_backup_and_push():
    psite.do_backup()
    cmd = psite.s3_sync()
    print(cmd)
    
cmds.append(["backup-and-push", cmd_backup_and_push])

if len(sys.argv) < 2:
    usage()
op = sys.argv[1]

for elt in cmds:
    if op == elt[0]:
        (elt[1])()
        sys.exit(0)

usage()
    
